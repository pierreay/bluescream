:PROPERTIES:
:ID:       5294e8b0-b57f-41d8-8783-4539f6c901ff
:END:
#+TITLE: Screaming Channels on Bluetooth Low Energy
#+SETUPFILE: https://raw.githubusercontent.com/pierreay/orgcss/master/orgcss.setup

* About

Main repository of the BlueScream project.

*Publication*

This project led to the following [[https://www.acsac.org/][ACSAC]] publication:

#+begin_quote
Pierre Ayoub, Romain Cayre, Aurélien Francillon and Clémentine Maurice. “BlueScream : Screaming Channels on Bluetooth Low Energy”. In: 40th Annual Computer Security Applications Conference (ACSAC ’24). Waikiki, Honolulu, Hawaii, United States, Dec. 2024. URL : https://hal.science/hal-04725668. DOI : 
#+end_quote

This project is also part of my Ph.D. Thesis, not yet published.

*How to cite*

# biblio-info@06cb76e
#+begin_quote
@InProceedings{	  ayoub24bluescream,
  title               = {{BlueScream: Screaming Channels on Bluetooth Low Energy}},
  author              = {Ayoub, Pierre and Cayre, Romain and Francillon, Aur{\'e}lien and Maurice, Cl{\'e}mentine},
  booktitle           = {{40th Annual Computer Security Applications Conference (ACSAC '24)}},
  address             = {Waikiki, Honolulu, Hawaii, United States},
  hal_local_reference = {Rapport LAAS n{\textdegree} 24326},
  year                = {2024},
  month               = dec,
  keywords            = {Screaming Channels ; Side-channel attacks ; Bluetooth Low Energy ; BLE ; Distant side-channels ; Mixed-signal chips},
  url                 = {https://hal.science/hal-04725668},
  pdf                 = {https://hal.science/hal-04725668v2/file/bluescream.pdf},
  hal_id              = {hal-04725668},
  hal_version         = {v2},
  affiliations        = {Eurecom, Univ Lille, CNRS, Inria},
}
#+end_quote

*Repositories*

This repository contains:
- =src= :: Source code for libraries and command-line utilities.
- =docs= :: Demos for reproducing the main results of the paper.
- =data= :: Datasets, experiments, signals, profiles, scripts.

The project is also composed of:
- [[https://github.com/pierreay/screaming_channels_poc][screaming_channels_poc]] :: Holds custom version of the Screaming Channels
  project, on which this one is based on. All credits goes to [[https://github.com/eurecom-s3/screaming_channels][EURECOM]] for this first previous work.

* Reproducing

Here are some hints about reproducing our results. More precise instructions
can be found in the Ph.D. manuscript, or in the documentation. For instance,
see [[file:docs/demo_20231014][docs/demo_20231014]] to learn how to visually analyze a trace. Another
example is [[file:docs/demo_20240828_acsac][docs/demo_20240828_acsac]] to learn how to reproduce attacks on two
selected datasets. More precise demonstrations can be found in the directory of
the experiments, see =data=.

** Dependencies for Recording

*Software*

Libraries:
- [[https://github.com/pothosware/SoapySDR][SoapySDR]] :: The library for recording I/Q samples with an SDR.
- [[https://github.com/pierreay/screaming_channels_whad][WHAD]] :: A custom version of the framework for wireless hacking. All credits
  goes to the [[https://github.com/whad-team/whad-client][WHAD team]].

Firmware:
- [[https://github.com/pierreay/screaming_channels_butterfly][ButteRFly]] :: The attacker firmware. A custom version of the WHAD-enabled for
  low-level traffic injection. All credits goes to the [[https://github.com/whad-team/butterfly][WHAD team]].
- [[https://github.com/pierreay/screaming_channels_nimble.git][NimBLE]] :: The victim firmware. A custom version of the [[https://mynewt.apache.org/][Apache MyNewt BLE]]
  firmware.

*Hardware*

- [[https://www.nordicsemi.com/Products/Development-hardware/nrf52840-dongle][nRF52840]] :: The attacker dongle.
- [[https://www.nordicsemi.com/Products/Development-hardware/nRF52-DK][nRF52832 (PCA10040)]] :: The victim board.
- SDR (/e.g./, [[https://greatscottgadgets.com/hackrf/one/][HackRF]], [[https://www.ettus.com/product-categories/usrp-bus-series/][USRP]]) :: The radio to record the leakage.

** Dependencies for Attacking

*Software*

- [[https://github.com/pierreay/python_hel][Histogram-Enumeration Library (HEL)]] :: Key enumeration and estimation
  library. All credits goes to [[https://github.com/giocamurati/python_hel][Giovanni Camurati]].
- [[https://numpy.org/][Numpy]] :: Well-known Python scientific computation library.

* Source code

The source code is composed of utilities, libraries and individuals scripts.
While the initial intention was to build a modular framework, the source code
may be messy -- it is a research project. For more up-to-date tooling, see my
other projects [[https://github.com/pierreay/soapyrx][SoapyRX]] and [[https://github.com/pierreay/scaff][SCAFF]].

Most important files:
- [[file:src/collect.sh][src/collect.sh]] :: Collect a complete dataset, leveraging =src/radio.py=.
- [[file:src/dataset.py][src/dataset.py]] :: Perform multiprocessor dataset processing.
- [[file:src/radio.py][src/radio.py]] :: Instrument the victim to make it scream and record the
  leakage for one trace. Leverage =src/lib/soapysdr.py= for I/Q recording and
  =src/lib/device.py= for victim instrumentation.
- [[file:src/attack.py][src/attack.py]] :: Perform side-channel attacks on a dataset (/e.g./, CRA or
  Template Attack).
- [[file:src/lib/device.py][src/lib/device.py]] :: Victim instrumentation leveraging WHAD to manipulate BLE
  parameters.
- [[file:src/lib/soapysdr.py][src/lib/soapysdr.py]] :: Radio instrumentation leveraging SoapySDR to record
  I/Q at the right time.
- [[file:src/lib/analyze.py][src/lib/analyze.py]] :: Digital signal processing and statistics helpers.

* Structure

** Files

- [[file:docs][docs]] :: Text documents and images.
- [[file:src][src]] :: Source code.

